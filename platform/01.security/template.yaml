AWSTemplateFormatVersion: '2010-09-09'
Description: Security resource for eks
Parameters:
  K8sVpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /k8s/network/vpc/id
Resources:
  K8sSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref K8sVpcId
      Tags:
        - Key: Name
          Value: !Sub "K8s-SecurityGroup"
        - Key: Project
          Value: aws-eks
  K8sIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: k8s-iam-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  K8sNodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      Path: /

  ParameterK8sIAMRoleArn:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /k8s/security/iam/arn
      Value: !GetAtt K8sIAMRole.Arn
  ParameterK8sNodeInstanceRoleArn:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /k8s/security/iam/node/arn
      Value: !GetAtt K8sNodeInstanceRole.Arn
  ParameterK8sSecurityGroupId:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /k8s/security/sg/id
      Value: !Ref K8sSecurityGroup